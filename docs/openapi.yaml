openapi: "3.0.3"
info:
  title: PHP-API
  version: "1.0"
servers:
  - url: https://api.test/
tags:
  - name: dozenten
  - name: kurse
  - name: kurse_lernende
  - name: laender
  - name: lehrbetrieb_lernende
  - name: lehrbetriebe
  - name: lernende
paths:
  /dozenten:
    get:
      tags:
        - dozenten
      summary: Get all existing Dozenten
      responses:
        "200":
          description: "Successful response with all Dozenten."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DozentenGet"
        "404":
          description: "No Dozenten found."
    post:
      tags:
        - dozenten
      summary: Create a new Dozent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DozentBody"
        required: true
      responses:
        "201":
          description: "Dozent created successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DozentenPost"
        "400":
          description: "Invalid request body."
  /dozenten/{id}:
    get:
      tags:
        - dozenten
      summary: Get a single Dozent
      parameters:
        - name: id
          in: path
          description: ID of the Dozent to retrieve
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "Successful response with the requested Dozent."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DozentenGet"
        "404":
          description: "Dozent not found."
    put:
      tags:
        - dozenten
      summary: Update an existing Dozent
      parameters:
        - name: id
          in: path
          description: ID of the Dozent to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DozentBody"
      responses:
        "200":
          description: "Dozent updated successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DozentenPut"
        "400":
          description: "Invalid request body."
    delete:
      tags:
        - dozenten
      summary: Delete an existing Dozent
      responses:
        "200":
          description: "Dozent deleted successfully."
        "404":
          description: "Dozent not found."
  /kurse:
    get:
      tags:
        - kurse
      summary: Get all Kurse
      responses:
        "200":
          description: "Successful response with all Kurse."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Kurs"
        "404":
          description: "No Kurse found."
    post:
      tags:
        - kurse
      summary: Create a new Kurs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KursCreate"
      responses:
        "201":
          description: "Kurs created successfully."
  /kurse/{id}:
    get:
      tags:
        - kurse
      summary: Get a single Kurs by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "Successful response with the requested Kurs."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Kurs"
        "404":
          description: "Kurs not found."
    put:
      tags:
        - kurse
      summary: Update an existing Kurs
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KursUpdate"
      responses:
        "200":
          description: "Kurs updated successfully."
    delete:
      tags:
        - kurse
      summary: Delete an existing Kurs
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "Kurs deleted successfully."
        "404":
          description: "Kurs not found."
  /kurse_lernende:
    get:
      tags:
        - kurse_lernende
      summary: Get all Kurse_Lernende relationships
      responses:
        "200":
          description: "Successful response with all Kurse_Lernende relationships."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/KursLernende"
        "404":
          description: "No Kurse_Lernende relationships found."
    post:
      tags:
        - kurse_lernende
      summary: Assign a Lernende to a Kurs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KursLernendeCreate"
      responses:
        "201":
          description: "Kurse_Lernende relationship created successfully."
  /kurse_lernende/{id}:
    get:
      tags:
        - kurse_lernende
      summary: Get a single Kurse_Lernende relationship by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "Successful response with the requested Kurse_Lernende relationship."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KursLernende"
        "404":
          description: "Kurse_Lernende relationship not found."
    put:
      tags:
        - kurse_lernende
      summary: Update an existing Kurse_Lernende relationship
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KursLernendeUpdate"
      responses:
        "200":
          description: "Kurse_Lernende relationship updated successfully."
    delete:
      tags:
        - kurse_lernende
      summary: Delete an existing Kurse_Lernende relationship
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "Kurse_Lernende relationship deleted successfully."
        "404":
          description: "Kurse_Lernende relationship not found."
components:
  schemas:
    $ref: schemas.yaml