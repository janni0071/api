openapi: "3.0.3"
info:
  title: PHP-API
  version: "1.0"
servers:
  - url: https://api.test/
tags:
  - name: dozenten
  - name: kurse
  - name: kurse_lernende
  - name: laender
  - name: lehrbetrieb_lernende
  - name: lehrbetriebe
  - name: lernende
paths:
  /dozenten:
    get:
      tags:
        - dozenten
      summary: Get all existing Dozenten
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DozentenGet"
        "404":
          description: Dozent not found
    post:
      tags:
        - dozenten
      summary: Create a new Dozent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DozentBody"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DozentenPost"
        "400":
          description: Bad Request (invalid JSON)
  /dozenten/{id}:
    get:
      tags:
        - dozenten
      summary: Get a single Dozent
      parameters:
        - name: id
          in: path
          description: ID of the Dozent to retrieve
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DozentenGet"
        "404":
          description: Not Found
    put:
      tags:
        - dozenten
      summary: Update an existing Dozent
      parameters:
        - name: id
          in: path
          description: ID of the Dozent to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DozentBody"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DozentenPut"
        "400":
          description: Bad Request
    delete:
      tags:
        - dozenten
      summary: Delete an existing Dozent
      responses:
        "200":
          description: Deleted successfully
        "404":
          description: Dozent not found
  /kurse:
    get:
      tags:
        - kurse
      summary: Get all Kurse
      responses:
        "200":
          description: A list of all Kurse
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Kurs"
        "404":
          description: No Kurse found
    post:
      tags:
        - kurse
      summary: Create a new Kurs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KursCreate"
      responses:
        "201":
          description: Kurs created successfully
  /kurse/{id}:
    get:
      tags:
        - kurse
      summary: Get a single Kurs by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Kurs details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Kurs"
        "404":
          description: Kurs not found
    put:
      tags:
        - kurse
      summary: Update an existing Kurs
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KursUpdate"
      responses:
        "200":
          description: Kurs updated successfully
    delete:
      tags:
        - kurse
      summary: Delete an existing Kurs
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Kurs deleted successfully
        "404":
          description: Kurs not found
  /kurse_lernende:
    get:
      tags:
        - kurse_lernende
      summary: Get all Kurse_Lernende relationships
      responses:
        "200":
          description: A list of all Kurse_Lernende relationships
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/KursLernende"
        "404":
          description: No Kurse_Lernende found
    post:
      tags:
        - kurse_lernende
      summary: Assign a Lernende to a Kurs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KursLernendeCreate"
      responses:
        "201":
          description: Kurse_Lernende relationship created successfully
  /kurse_lernende/{id}:
    get:
      tags:
        - kurse_lernende
      summary: Get a single Kurse_Lernende relationship by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Kurse_Lernende relationship details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KursLernende"
        "404":
          description: Kurse_Lernende relationship not found
    put:
      tags:
        - kurse_lernende
      summary: Update an existing Kurse_Lernende relationship
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KursLernendeUpdate"
      responses:
        "200":
          description: Kurse_Lernende relationship updated successfully
    delete:
      tags:
        - kurse_lernende
      summary: Delete an existing Kurse_Lernende relationship
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Kurse_Lernende relationship deleted successfully
        "404":
          description: Kurse_Lernende relationship not found
  /laender:
    get:
      tags:
        - laender
      summary: Get all Laender
      responses:
        "200":
          description: A list of all countries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Land"
        "404":
          description: No countries found
    post:
      tags:
        - laender
      summary: Create a new country
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LandCreate"
      responses:
        "201":
          description: Country created successfully
  /laender/{id}:
    get:
      tags:
        - laender
      summary: Get a single country by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Country details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Land"
        "404":
          description: Country not found
    put:
      tags:
        - laender
      summary: Update an existing country
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LandUpdate"
      responses:
        "200":
          description: Country updated successfully
    delete:
      tags:
        - laender
      summary: Delete an existing country
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Country deleted successfully
        "404":
          description: Country not found
  /lehrbetrieb_lernende:
    get:
      tags:
        - lehrbetrieb_lernende
      summary: Get all Lehrbetrieb_Lernende relationships
      responses:
        "200":
          description: A list of all Lehrbetrieb_Lernende relationships
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LehrbetriebLernende"
        "404":
          description: No Lehrbetrieb_Lernende relationships found
    post:
      tags:
        - lehrbetrieb_lernende
      summary: Assign a Lernende to a Lehrbetrieb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LehrbetriebLernendeCreate"
      responses:
        "201":
          description: Lehrbetrieb_Lernende relationship created successfully
  /lehrbetrieb_lernende/{id}:
    get:
      tags:
        - lehrbetrieb_lernende
      summary: Get a single Lehrbetrieb_Lernende relationship by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Lehrbetrieb_Lernende relationship details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LehrbetriebLernende"
        "404":
          description: Lehrbetrieb_Lernende relationship not found
    put:
      tags:
        - lehrbetrieb_lernende
      summary: Update an existing Lehrbetrieb_Lernende relationship
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LehrbetriebLernendeUpdate"
      responses:
        "200":
          description: Lehrbetrieb_Lernende relationship updated successfully
    delete:
      tags:
        - lehrbetrieb_lernende
      summary: Delete an existing Lehrbetrieb_Lernende relationship
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Lehrbetrieb_Lernende relationship deleted successfully
        "404":
          description: Lehrbetrieb_Lernende relationship not found
  /lehrbetriebe:
    get:
      tags:
        - lehrbetriebe
      summary: Get all Lehrbetriebe
      responses:
        "200":
          description: A list of all Lehrbetriebe
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Lehrbetrieb"
        "404":
          description: No Lehrbetriebe found
    post:
      tags:
        - lehrbetriebe
      summary: Create a new Lehrbetrieb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LehrbetriebCreate"
      responses:
        "201":
          description: Lehrbetrieb created successfully
  /lehrbetriebe/{id}:
    get:
      tags:
        - lehrbetriebe
      summary: Get a single Lehrbetrieb by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Lehrbetrieb details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lehrbetrieb"
        "404":
          description: Lehrbetrieb not found
    put:
      tags:
        - lehrbetriebe
      summary: Update an existing Lehrbetrieb
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LehrbetriebUpdate"
      responses:
        "200":
          description: Lehrbetrieb updated successfully
    delete:
      tags:
        - lehrbetriebe
      summary: Delete an existing Lehrbetrieb
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Lehrbetrieb deleted successfully
        "404":
          description: Lehrbetrieb not found
  /lernende:
    get:
      tags:
        - lernende
      summary: Get all Lernende
      responses:
        "200":
          description: A list of all Lernende
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Lernender"
        "404":
          description: No Lernende found
    post:
      tags:
        - lernende
      summary: Create a new Lernender
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LernenderCreate"
      responses:
        "201":
          description: Lernender created successfully
  /lernende/{id}:
    get:
      tags:
        - lernende
      summary: Get a single Lernender by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Lernender details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lernender"
        "404":
          description: Lernender not found
    put:
      tags:
        - lernende
      summary: Update an existing Lernender
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LernenderUpdate"
      responses:
        "200":
          description: Lernender updated successfully
    delete:
      tags:
        - lernende
      summary: Delete an existing Lernender
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Lernender deleted successfully
        "404":
          description: Lernender not found
components:
  schemas:
    DozentenGet:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Dozenten retrieved successfully
        data:
          type: array
          items:
            type: object
            properties:
              id_dozent:
                type: integer
                example: 1
              vorname:
                type: string
                example: Anna
              nachname:
                type: string
                example: Meier
              strasse:
                type: string
                example: Lindenstrasse 9
              plz:
                type: string
                example: 4051
              ort:
                type: string
                example: Basel
              fk_land:
                type: integer
                example: 1
              geschlecht:
                type: string
                format: string(1)
                example: F
              telefon:
                type: string
                example: "0611234567"
              handy:
                type: string
                example: "0761234567"
              email:
                type: string
                example: anna.meier@example.com
              birthdate:
                type: string
                format: date
                example: 1980-08-20
    DozentBody:
      type: object
      properties:
        vorname:
          type: string
          example: Anna
          description: First name of the user
        nachname:
          type: string
          example: Meier
          description: Last name of the user
        strasse:
          type: string
          example: Lindenstrasse 9
          description: Street address
        plz:
          type: string
          example: 4051
          description: Postal code
        ort:
          type: string
          example: Basel
          description: City
        fk_land:
          type: string
          example: "1"
          description: Foreign key for country
        geschlecht:
          type: string
          enum:
            - M
            - F
          example: F
          description: Gender (M for male, F for female)
        telefon:
          type: string
          example: 0611234567
          description: Phone number
        handy:
          type: string
          example: 0761234567
          description: Mobile phone number
        email:
          type: string
          format: email
          example: anna.meier@example.com
          description: Email address
        birthdate:
          type: string
          format: date
          example: 1980-08-20
          description: Date of birth
      required:
        - vorname
        - nachname
        - strasse
        - plz
        - ort
        - fk_land
        - geschlecht
        - email
        - birthdate
    DozentenPost:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Dozent created successfully
    DozentenPut:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Dozent updated successfully
    Kurs: # TODO: Add message wrapper
      type: object
      properties:
        id_kurs:
          type: integer
          example: 1
        kursnummer:
          type: string
          example: "KRS12345"
        kursthema:
          type: string
          example: "Introduction to PHP"
        inhalt:
          type: string
          example: "Learn the basics of PHP programming."
        fk_dozent:
          type: integer
          example: 1
        startdatum:
          type: string
          format: date
          example: "2024-01-15"
        enddatum:
          type: string
          format: date
          example: "2024-01-20"
        dauer:
          type: integer
          example: 5
    KursCreate:
      type: object
      properties:
        kursnummer:
          type: string
          example: "KRS12345"
        kursthema:
          type: string
          example: "Introduction to PHP"
        inhalt:
          type: string
          example: "Learn the basics of PHP programming."
        fk_dozent:
          type: integer
          example: 1
        startdatum:
          type: string
          format: date
          example: "2024-01-15"
        enddatum:
          type: string
          format: date
          example: "2024-01-20"
        dauer:
          type: integer
          example: 5
      required:
        - kursnummer
        - kursthema
        - inhalt
        - fk_dozent
        - startdatum
        - enddatum
        - dauer
    KursUpdate:
      type: object
      properties:
        kursnummer:
          type: string
          example: "KRS12345"
        kursthema:
          type: string
          example: "Advanced PHP"
        inhalt:
          type: string
          example: "Learn advanced PHP programming concepts."
        fk_dozent:
          type: integer
          example: 2
        startdatum:
          type: string
          format: date
          example: "2024-02-01"
        enddatum:
          type: string
          format: date
          example: "2024-02-10"
        dauer:
          type: integer
          example: 10
    KursLernende:
      type: object
      properties:
        id_kurs_lernende:
          type: integer
          example: 1
        fk_lernende:
          type: integer
          example: 10
        fk_kurs:
          type: integer
          example: 5
        role:
          type: string
          example: "Participant"
    KursLernendeCreate:
      type: object
      properties:
        fk_lernende:
          type: integer
          example: 10
        fk_kurs:
          type: integer
          example: 5
        role:
          type: string
          example: "Participant"
      required:
        - fk_lernende
        - fk_kurs
        - role
    KursLernendeUpdate:
      type: object
      properties:
        role:
          type: string
          example: "Speaker"
    Land:
      type: object
      properties:
        id_countries:
          type: integer
          example: 1
        country:
          type: string
          example: "Switzerland"
    LandCreate:
      type: object
      properties:
        country:
          type: string
          example: "Germany"
      required:
        - country
    LandUpdate:
      type: object
      properties:
        country:
          type: string
          example: "Austria"
    LehrbetriebLernende:
      type: object
      properties:
        id_lehrbetrieb_lernende:
          type: integer
          example: 1
        fk_lehrbetrieb:
          type: integer
          example: 2
        fk_lernende:
          type: integer
          example: 5
        start:
          type: string
          format: date
          example: "2023-01-01"
        ende:
          type: string
          format: date
          example: "2023-12-31"
        beruf:
          type: string
          example: "Software Developer Apprentice"
    LehrbetriebLernendeCreate:
      type: object
      properties:
        fk_lehrbetrieb:
          type: integer
          example: 2
        fk_lernende:
          type: integer
          example: 5
        start:
          type: string
          format: date
          example: "2023-01-01"
        ende:
          type: string
          format: date
          example: "2023-12-31"
        beruf:
          type: string
          example: "Software Developer Apprentice"
      required:
        - fk_lehrbetrieb
        - fk_lernende
        - start
        - ende
        - beruf
    LehrbetriebLernendeUpdate:
      type: object
      properties:
        start:
          type: string
          format: date
          example: "2023-06-01"
        ende:
          type: string
          format: date
          example: "2024-06-01"
        beruf:
          type: string
          example: "IT Specialist"
    Lehrbetrieb:
      type: object
      properties:
        id_lehrbetrieb:
          type: integer
          example: 1
        firma:
          type: string
          example: "Tech Solutions AG"
        strasse:
          type: string
          example: "Industriestrasse 15"
        plz:
          type: string
          example: "8005"
        ort:
          type: string
          example: "Zürich"
    LehrbetriebCreate:
      type: object
      properties:
        firma:
          type: string
          example: "Tech Solutions AG"
        strasse:
          type: string
          example: "Industriestrasse 15"
        plz:
          type: string
          example: "8005"
        ort:
          type: string
          example: "Zürich"
      required:
        - firma
        - strasse
        - plz
        - ort
    LehrbetriebUpdate:
      type: object
      properties:
        firma:
          type: string
          example: "Innovative IT GmbH"
        strasse:
          type: string
          example: "Bahnhofstrasse 20"
        plz:
          type: string
          example: "3001"
        ort:
          type: string
          example: "Bern"
    Lernender:
      type: object
      properties:
        id_lernende:
          type: integer
          example: 1
        vorname:
          type: string
          example: "Luca"
        nachname:
          type: string
          example: "Müller"
        strasse:
          type: string
          example: "Hauptstrasse 10"
        plz:
          type: string
          example: "4001"
        ort:
          type: string
          example: "Basel"
        fk_land:
          type: integer
          example: 1
        geschlecht:
          type: string
          example: "M"
        telefon:
          type: string
          example: "0611234567"
        handy:
          type: string
          example: "0791234567"
        email:
          type: string
          example: "luca.mueller@example.com"
        email_privat:
          type: string
          example: "l.mueller@example.com"
        birthdate:
          type: string
          format: date
          example: "2005-04-15"
    LernenderCreate:
      type: object
      properties:
        vorname:
          type: string
          example: "Luca"
        nachname:
          type: string
          example: "Müller"
        strasse:
          type: string
          example: "Hauptstrasse 10"
        plz:
          type: string
          example: "4001"
        ort:
          type: string
          example: "Basel"
        fk_land:
          type: integer
          example: 1
        geschlecht:
          type: string
          example: "M"
        telefon:
          type: string
          example: "0611234567"
        handy:
          type: string
          example: "0791234567"
        email:
          type: string
          example: "luca.mueller@example.com"
        email_privat:
          type: string
          example: "l.mueller@example.com"
        birthdate:
          type: string
          format: date
          example: "2005-04-15"
      required:
        - vorname
        - nachname
        - strasse
        - plz
        - ort
        - fk_land
        - geschlecht
        - email
        - birthdate
    LernenderUpdate:
      type: object
      properties:
        vorname:
          type: string
          example: "Luca"
        nachname:
          type: string
          example: "Müller"
        strasse:
          type: string
          example: "Neue Strasse 20"
        plz:
          type: string
          example: "4002"
        ort:
          type: string
          example: "Basel"
        fk_land:
          type: integer
          example: 2
        geschlecht:
          type: string
          example: "M"
        telefon:
          type: string
          example: "0617654321"
        handy:
          type: string
          example: "0797654321"
        email:
          type: string
          example: "luca.new@example.com"
        email_privat:
          type: string
          example: "l.new@example.com"
        birthdate:
          type: string
          format: date
          example: "2005-04-15"
